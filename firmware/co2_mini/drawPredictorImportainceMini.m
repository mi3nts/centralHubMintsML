function [] = drawPredictorImportainceMini(regressionTree,...
                                        estimator,...
                                        nodeID,...
                                         summary,...
                                         inputLabels,...
                                        saveNameFig)
%GETPREDICTORIMPORTAINCE Summary of this function goes here
%   Detailed explanation goes here

imp = 100*(regressionTree.predictorImportance/sum(regressionTree.predictorImportance));

limit = max(imp)+4
[sortedImp,isortedImp] = sort(imp,'descend');

   figure_1= figure('Tag','PREDICTOR_IMPORTAINCE_PLOT',...
        'NumberTitle','off',...
        'units','pixels',...   
        'OuterPosition',[0 0 2000 1000],...
        'Name','predictorImportance',...
        'Visible','on'...
    )

%    figure_1= figure('Tag','PREDICTOR_IMPORTAINCE_PLOT',...
%         'NumberTitle','off',...
%         'units','pixels',...   
%         'OuterPosition',[0 0 2000 1300],...
%         'Name','predictorImportance',...
%         'Visible','on'...
%     )


barh(imp(isortedImp));hold on ; grid on ;
set(gca,'ydir','reverse');
xlabel('Scaled Importance(%)','FontSize',20);
ylabel('Predictor Rank','FontSize',20);
   % Create title
    % Create title
    Top_Title=strcat(estimator," - " +summary);
    title({Top_Title},'FontWeight','bold','FontSize',25);
    
    
% title('Predictor Importaince Estimates')
ylim([.5 (4+.5)]);
yticks([1:1:4])
xlim([0 (limit)]);
xticks([0:1:limit])

sortedPredictorLabels= inputLabels(isortedImp);

for n = 1:4
         text(...
            imp(isortedImp(n))+ 0.05,n,...
            sortedPredictorLabels(n),...
            'FontSize',15 ...
           )
end
    
    Fig_name = strcat(saveNameFig);
    saveas(figure_1,char(Fig_name));

%     
%     print('ScreenSizeFigure','-dpng','-r100')
    
end
